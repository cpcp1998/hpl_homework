矩阵与向量相乘，数据从由gen事先生成的文件中读取。
读取数据复杂度O(n^2)，计算复杂度O(n^2)，
而IO操作速度较慢，故并行后主要优化了从文件读入矩阵的速度。

对矩阵进行checkerboard分解后并行计算，性能大约可以提升到两倍左右。

但同时也注意到checkerboard分解退化到n*1的情况时，读入文件效率更高；
而第二个维度上分解得越多，文件读入效率反而下降。可作如下解释：
矩阵n*1分解时，每个进程读入文件为连续读入，可以一次性完成；
当第二个维度上分解较多时，文件读入跳跃，操作系统可能做了很多不需要的缓存，
降低了读入的速度。

另外提供了不包括文件读入时间的benchmark_without_io.example，
可以看出分解退化与否在本机上对运行速度影响不大，
只要进程数开到4以上就没有明显的速度差异，这可能也与本机核心数少有关。

本机benchmark.example运行环境:
	corei7-6500U @ 2.50GHz 双核
	Linux Subsystem for Windows
	gcc 4.8.4
	openmpi 1.6.5
